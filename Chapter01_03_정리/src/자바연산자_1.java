/*
 * 	연산자 
 * 	-------
 * 		1. 단항연산자
 * 			= 증감연산자 : 반복문에서 주로 사용
 * 				++, -- : 1증가,1감소
 * 				-------
 * 				전치 연산자
 * 			    ++a =====> 먼저 증가 나중에 다른 연산 처리
 * 				후치 연산자
 * 				a++ =====> 다른 연산처리 후에 증가
 * 				------------------------------
 * 			** ++a , a++ => a는 무조건 1개 증가한다
 * 			int a=10;
 * 			System.out.println(a++) => 출력후에 증가 => 10
 * 			System.out.println(++a) => 증가후에 출력 => 11 
 * 
 * 			= 부정연산자 : 조건문에서 주로 사용 
 * 			   무조건 결과값 : true/false ==> ! (반대값)
 * 
 * 			= 형변환연산자 : 실수-> 정수, 문자-> 정수, 정수-> 문자 ...
 * 			  --------
 * 			  데이터형에 대한 형변환 ==> 클래스 형변환 (is-a, has-a)
 * 			-----------------------------------------------
 * 			  데이터형의 크기
 * 			----------------> 데이터형을 크게 (Upcasting)
 * 			  byte < char < long < double
 *          <---------------- 데이터형을 작게 (Dowbcasting)
 *           => 기본 Upcasting => 자동형변환
 *           =>     Downcasting => 강제형변환 
 *           
 *        ** 연산처리시에 주로 형변환이 많다
 *        	 연산 => 데이터형 같은 것끼리 연산
 *        ----------------------------------자동으로 큰 데이터형으로 변경 후에 연산처리
 *           형변환 : (데이터형)
 *         => 단항연산자: 연산대상(피연산자) => 1개 
 *        
 * 		2. 이항연산자 => 연산 대상이 2개인 경우
 * 				=> 산술연산자
 * 					= 비트연산자,쉬프트연산자,반전연산자
 * 					=> + , - . * , / , % => 5개의 연산 
 * 					 +
 * 					=> 덧셈
 * 					=> 문자열 결합
 * 					 /
 * 					=> 0으로 나눌 수 없다
 * 					=> 정수/정수 = 정수
 * 					%
 * 					=> 부호는 왼쪽편의 부호가 남는다 
 * 					
 * 					*** 연산처리가 될 때
 * 						다른 데이터형일 경우에는 큰 데이터형으로 결과값이 나온다 
 * 						int + double = double
 * 						int + char = int
 * 						long + int + double = double
 * 						** int이하 (byte,char)는 연산결과는 int
 * 						byte+byte=int
 * 						byte+char=int
 * 						char+char=int
 * 				=> 비교연산자
 * 					=> 결과값 : boolean => 조건문, 반복문에서 주로 사용
 * 					   == 같다
 * 					   != 같지 않다
 * 					   < 작다
 * 					   > 크다
 * 					   <= 작거나 같다 ( < || == )
 * 					   >= 크거나 같다 ( > || == )
 * 					=> 숫자 (int,char,byte,long,double)
 * 					   boolean일 경우에는 ==,!=만 가능하다
 * 
 * 				=> 논리연산자 : 결과값 boolean
 * 				   && , ||
 * 				   (조건) && (조건)
 * 				   -----    -----
 *                   |        |
 *                   ----------
 *                        |
 *                      결과값
 *               
 *               *** &&가 || 보다는 우선순위 ==> ()는 최우선 순위 연산자
 *               조건 || 조건 && 조건 
 *                        ( && 가 우선으로 계산되기 때문에 () 써야함)
 *                         
 *     		-------------------------------------------------
 *                          &&                ||
 *     		-------------------------------------------------
 *      		 true  true        true              true
 *    		 -------------------------------------------------
 *     		 	 true  false       false             true
 *     		-------------------------------------------------
 *      		 false true        false             true
 *     		-------------------------------------------------
 *      		 false false       false             false
 *     		-------------------------------------------------
 *              &&는 두 개의 조건이 true일 때만 true 나머지 false
 *              ----- 범위 포함 , 로그인 (ID,FWD)
 *              ||는 둘 중에 1개가 true이면 true
 *              ----- 범위 벗어나는 경우
 *              
 * 				=> 대입연산자
 *   			   =  : 대입
 *                 += : 여러 개 증가
 *                 -= : 여러 개 감소
 *                 
 *                => 1개 증가
 *                  a++
 *                  ++a
 *                  a+=1
 *                  a=a+1
 *                 
 * 		3. 삼항연산자 => 소스를 줄이기 위해 주로 사용 
 * 			(조건) ? 값1:값2
 * 			----
 * 			true  => 값1
 * 			false => 값2
 * 			----------------------if~else
 * 		=> 산술연산자 = 형변환연산 결합 => 통계,평균 => 단독으로 사용
 * 		=> 비교연산자, 논리연산자 => 제어문에서 주로 사용 if/for
 * 
 * 			자바 => 기본 => 누가 빨리 찾기 
 * 
 * 
 */
public class 자바연산자_1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
