/*
 *   1) int[] n = {1, 2, 3, 4, 5};
     2) int n[] = {0};
     3) int[] n = new int[3];
     4) int n[3] = new int[3]; (O)
            ---- 배열 데이터형 [] => 빈 괄호 설정 
     
     배열 => 변수 여러개 모아서 한개 이름으로 제어 
                          --------
                          변수 => 인덱스번호로 구분한다 
         => 고정적 => 데이터 추가 , 데이터 삭제 불가능 
            => 선언한 갯수만큼만 사용이 가능 
               ** 갯수를 늘리는 경우 : 새로운 배열을 생성 (큰게)
                  => 데이터 복사후 사용 arraycopy() , for ...
         => 인덱스를 이용하기 때문 => 제어문 사용 편리 
            => 인덱스는 0부터 순서적으로 되어 있다 
         => 선언
            데이터형[] 배열명; => 권장 
            데이터형 배열명[]; 
            ------ 맞는 데이터만 첨부 => 같은 데이터형 모운다 , 사용용도가 같을때
            예) 이미지 , 제목 , 조회수 .... => 인덱스 번호만 참조
         => 초기화 
            배열명=new 데이터형[]{} => 초기화 
            선언과 동시에 초기화 
            데이터형[] 배열명={값....}
            *** 데이터형[] 배열명=new 데이터형[갯수] => 임의로 초기화 (자동)
         => 배열의 갯수확인 
            배열명.length 
         => 배열한개씩 사용 
            배열명[인덱스]=값 
            읽기: 배열명[인덱스] 
                 ----------- 일반 변수와 동일시 
            int a=10,b=10,c=30
            ---------
                10 ===> a
            ---------
                20 ===> b
            ---------
                30 ===> c   => c=40 (30=>40)
            ---------
            
            int[] arr={10,20,30}
            
            arr -----> ---------------------
                          10    20    30
                       ---------------------
                        arr[0]  arr[1] arr[2] => 변수명 
                        ------  ------ ------
                          |        |     |
                          a        b     c ==> arr[2]=40
         

 */
public class 배열문제_01 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        int[] n1= {1,2,3,4,5};
        System.out.println(n1.length);
        int n2[]= {0}; // C/C++ => 가급적인 사용하지 않는다 => int n2=0;
        System.out.println(n2.length);
        int[] n3=new int[3];
        System.out.println(n3.length);
        //int n4[3]=new int[3];
        //  ----- 배열로 데이터를 저장 []
	}

}