package com.sist.main;
/*
 *	상속
 *	1) 단일 상속만 가능 
 *	2) extends : 확장한 클래스 => 사용
 *	3) 이미 제작된 클래스를 이용 => 신뢰성이 좋다
 *	4) 소스를 줄일 수 없다 => 가독성은 떨어진다
 *		=> 가상으로 상속되었다고 가정...
 *
 *	 	class A
 *		{
 *			int a; 
 *			int b;
 *			int c;
 *			public void display(){}
 *		}
 *		----------------------------
 *		class B extends A
 *		{
 *			// a,b,c 기능이 있음
 *			public
 *		}
 *		B bb=new B();
 *		
 *		---bb---
 *       0X100
 *      -------- 0X100 ------------------------
 *      				----- supper ------
 *      				  -----a-----
 *      		
 *      				  -----b-----
 *      
 *      				  -----c-----
 *      		
 *      				  -----display()---
 *      			    -------------------
 *      			    
 *      				------ this --------
 *      				  -----bbb()-----
 *      				
 *      				  ---------------
 *      		
 *      				-------------------
 *      			  ----------------------
 *      			  bb라는 객체를 통해서 접근이 가능
 *      			  => 상속이 안된다
 *      				1. 생성자
 *      				2. 초기화 블록
 *      				3. private : 상속은 되는데 접근이 불가 
 *      					=> protected <상속받은 클래스 접근 가능 
 *      				4. static : 상속은 안된다 => 공통으로 사용은 가능 
 *      			
 *      				클래스의 크기 비교는 반드시 상속/포함
 *     	class A{
 *     int a,b,c,d,e
 *     }
 *     	class B{
 *     int k
 *     }
 *     ------- A>B (x) 크기를 잴 수 없다 , 크기를 재려면 상속,포함 
 *     
 *     class A{
 *     int a;
 *     int b;
 *     }
 *     class B extends A{
 *     //int a,int b
 *     int C;
 *     }
 *     
 *     A > B => !!! 상속은 내리는 클래스가 더 크다 !!! ( is-a ) 이다 / 데이터형이 커진다
 *     
 *     인간 = 남자
 *     인간 = 여자 // 불가
 *     
 *     남자 = (남자)인간
 *     여자 = (여자)인간
 *     -------------- 클래스에도 크기가 있다 => 형변환 
 *     
 *     ** 자바는 모든 클래스 (사용자 정의, 라이브러리)의 상속을 내리는 클래스가 있다 (최상위 클래스:Object)
 *        => Object가 가지고 있는 모든 기능을 사용할 수 있다 
 */
import javax.swing.*;
import java.lang.*; // 하도 많이 써서 생략할 수 있게 해줌 
public class MainClass_03 extends Object{
	/*
	 *	생략이 가능한 코드
	 *	-------------
	 *	1. import java.lang.*; => String, Math, StringBuffer... 자주 사용하기 때문에 생략이 가능 
	 *	2. extends Object => 생략이 된다 // 모든 클래스는 Object로부터 상속을 받는다
	 *	3. 생성자 => 필요 없는 경우 생략이 가능하다 
	 *	4. void 메서드에서 return을 생햑할 수 있다 => 컴파일러가 자동 추가
	 *	5. 모든 클래스는 예외처리 
	 *	   ---------------
	 *     컴파일시         실행시
	 *     ------        -----
	 *     반드시 예외처리   생략가능 => 사용자 입력값을 받아 본다 
	 *     
	 *   => 상속 
	 */
	public MainClass_03() {
	}
	public static void main(String[] args) {

	}

}
