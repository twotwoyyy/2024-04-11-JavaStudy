/*
 * 		논리연산자 ==> 결과값은 true/false
 * 		&& => 직렬연산자 => 범위, 기간 포함
 *  		  jumsu>=0 && jumsu<=100 ; 0~100 사이에 있는지
 * 		|| => 병렬연산자 => 범위, 기간을 벗어난 경우
 * 			  jumsu<0 || jumsu>100 ==> 오류 처리
 * 
 * 
 *  ex) 앞 조건 false 나올 경우 뒤는 연산처리 하지 않는다 => 최적화 연산 
 *   
 * 		(조건) %% (조건)   : 4가지 경우의 수
 * 		-----    -----
 *        |        |
 *        ----------
 *             |
 *           결과값
 *           
 *     -------------------------------------------------
 *                          &&                ||
 *     -------------------------------------------------
 *       true  true        true              true
 *     -------------------------------------------------
 *       true  false       false             true
 *     -------------------------------------------------
 *       false true        false             true
 *     -------------------------------------------------
 *       false false       false             false
 *     -------------------------------------------------
 *     
 *  ex) 앞 조건 true 나올경우 뒤는 연산 처리 하지 않는다 => 최적화 연산  
 *       (조건) || (조건)
 *       ----     ----
 *        |        |
 *        ----------
 *            |
 *           결과값  
 */
public class 연산자_논리연산자_1 {
	
	public static void main(String[] args) {
		int x=10;
		int y=9;
		
		boolean bCheck= x==y && ++y==x;
		//             -----false이면 뒤 조건은 처리하지 않는다 
		        
		System.out.println("bCheck="+bCheck);
		System.out.println("x="+x);
		System.out.println("y="+y); // y9일경우 ++y==x;을 수행하지 않음. 앞이 false이기 때문에
		
	}
}
