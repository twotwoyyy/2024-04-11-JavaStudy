/*
 * 	변수 : 한 개의 데이터를 저장하는 메모리 공간의 이름 
 * ----필요시에는 변경이 가능
 * 메모리 공간 => 4byte씩 나눠진다
 *   0-------------
 *        사용중
 *   4-------------
 *        사용중
 *   8-------------
 *         10  --------- 별칭 a (변수)
 *   12-------------
 *   
 *   16-------------
 *   .
 *   .
 *   .
 *   
 *   1) 변수 명칭법
 *      1. 알파벳이나 한글로 시작한다
 *        *알파벳 사용시 대소문자 구분!
 *      2. 숫자 사용이 가능하다 (앞에 사용할 수 없음)
 *         a1..a2...
 *      3. 특수문자 사용이 가능하다 ( _ , % ) => 보통 단어가 2개일시 언더바 사용 ex) file_name
 *         _name  : 임시 변수
 *      4. 키워드는 사용할 수 없다 (예약어)
 *       ----키워드란 '자바에서 이미 사용중인 단어' /이클립스에선 보라색 글씨로 뜸
 *      5. 공백이 있으면 안된다
 *      6. 변수명에 대한 제한이 없다
 *         -------------------3~10글자 => 압축
 *         ex) 국어점수 : a => kor
 *         
 * --------------------------------------------------
 * 
 *     kor=89
 *     --- --
 *     |   | (89) 실제 저장된 값 (메모리) => 리터럴
 *   (kor)변수 => 다음에 다시 사용한다
 *   
 *   변수의 형식)
 *    데이터형 변수명 = 값
 *    ----------------
 *     | 메모리 크기
 *   
 *   데이터형 30p
 *   ------
 *   정수
 *    ***1byte => byte => 파일 읽기 / 업로드 / 다운로드 / 네트워크 전송 
 *       -128~ 127까지만 사용 가능 = 범위 벗어나면 오류 발생
 *    2byte => short => 사용빈도 거의 없다 (C언어와의 호환성)
 *    -------------------------------------------------------------
 *    ***4byte => int => default (컴퓨터는 무조건 숫자가 나오면 int로 인식)
 *    ***8byte => long => 금융권
 *    ------------------------------------------------long과 int 구분 long은 숫자뒤에 L(1)
 *    byte => 메모리 공간을 절약 할 때 많이 씀 : 속도 절약 
 *       10  20  30
 *      => byte , short , int , long
 *      => int 사용하는 것이 좋음. 속도가 빠르기 때문. 퍼포먼스 
 *    
 *    -> 컴퓨터에 저장 
 *       ----0,1
 *       1byte => 8bit(0,1=>8로 저장)
 *       ----------------------------
 *       부호비트 1  1  1  1  1  1  1 
 *       -----
 *       0 => 양수
 *       1 => 음수
 *       ----------------------------
 *       0 1 1 1 1 1 1 1 => 127 => 음수 => 2의 보수 => 127+1 => -128
 *       
 *   실수
 *    4byte
 *    8byte
 *   문자
 *    2byte
 *   논리
 *    1byte
 *    
 *    데이터를 저장해서 재사용 => 변수 (한개만 저장이 가능)
 *    정수
 *    byte => 1byte (-128~127까지만)
 *    short => 2byte (-32768~32767까지만) => 사용하지 않는다
 *    int => 4byte (-21억 4천~ 21억 4천)
 *    long => 8byte => 64bit 
 *    
 *    
 */
public class 변수_1 {

	public static void main(String[] args) {
		//byte b=127; // 사용범위, 메모리 크기 => 데이터형
		//System.out.println(Short.MAX_VALUE);
		final byte b1 =      -128; // final이 붙으면 상수, 변경 불가 
//        데이터형   변수명 실제 메모리에 저장한값 
		//System.out.println(b1);
		long a=21000000000L; // int 범위 벗어나지 않으면 L자 붙이지 않아도 가능
		long b=21000L;
		
		// 국어 영어 수학 점수 총점 계산
		int kor=90;
		// 4byte 메모리 공간을 만들어서 => kor이름으로 90을 저장한다 
		int eng=80;
		int math=70;
		// --- 초기값, 변수이기에 수정가능 
		// 초기값을 부여하는 방법
		/*
		 * 1. 명시적 초기화 (직접 부여)
		 * int a=100;
		 * 2. 난수발생 => 임의로 숫자를 추출 => 게임
		 * 3. 사용자로부터 값을 받아서 초기화
		 * 초기값 없이 사용하면 오류가 난다
		 */
		
		/*
		 * 변수
		 * ---
		 * 1. 지역변수 : 반드시 초기화를 해서 사용(메인안에 코딩)
		 * -----------------------------------
		 * *28p 초기화 방법
		 *   1) 선언과 동시에 초기값 부여 
		 *     int a =10
		 *   2) 선언을 먼저, 나중에 값을 대입
		 *     int a;
		 *     a=10;
		 *   3) 여러개를 동시에 선언
		 *     int a=10;
		 *     int b=20;
		 *     
		 *     int a,b,c;
		 *     --- 동일해야함
		 *     a=b=c=10;
		 *     
		 *     int a=10, b=10, c=10;
		 *     
		 * 2. 멤버변수(클래스블럭안)
		 * 3. 공유변수
		 * 4. 참조변수(주소를 이용해 접근)
		 * --------------------------------------
		 * 
		 * 30page
		 * 논리형 => boolean => 저장하는 값 => true/false
		 * 1byte => true=1, false=0
		 * => 사용하는 위치는 조건을 사용할 때 
		 * => 형식)
		 * boolean bCheck=false;
		 */
		System.out.println(kor+eng+math);
		boolean bCheck=false;
		System.out.println(bCheck);
		
		/*
		 *  문자형
		 *  => char : 멀티바이트 => 2byte => UniCode
		 *  -------
		 *  | C언어 => 싱글바이트 => 1byte => ASC
		 *  => 각 문자마다 번호를 부여 (ASC)
		 *  => 0~65535(멀티)
		 *  => 0~255(싱글)
		 *  => A => 65 // B는 66
		 *  => a => 97 // b는 98
		 *  => '0' => 48
		 *  => 표현 방식 => 문자1개 => ' ' 써야함
		 */
		char hakjum='B';
		System.out.println(hakjum);
		char fname='홍';
		System.out.println(fname);
	    char num='0';
	    System.out.println(num);
	    System.out.println((int)num);
	}

}
