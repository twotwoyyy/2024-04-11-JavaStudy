package com.sist.main;
import java.util.Scanner;

import com.sist.manager.*;
import com.sist.vo.Movie;
public class Main {
/*
 *                                        <변수>
 *  ----------------------------------------------------------------------------------
 *   종류                             메모리에 저장되는 시점     사용범위    메모리 해제    저장 위치
 *  ----------------------------------------------------------------------------------
 *   인스턴스변수                        new 클래스명()        클래스 전체  프로그램 종료    Heap
 *   class A                        => 메모리 따로 저장
 *   {
 *    [접근지정어] 데이터형 변수명;
 *    클래스 블록 안에 선언 가능
 *   }
 *  ----------------------------------------------------------------------------------
 *   정적변수(static)                  컴파일시에 메모리에 저장    자신의 클래스 프로그램 종료  Method
 *   class A                        접근방식: 클래스명.변수명      전체,                Area
 *   {                              new없이 저장이 가능       다른 클래스
 *    [접근지정어] static 데이터형 변수명;
 *    클래스 블록 안에서만 선언 가능
 *   }
 *   **  모든 클래스가 공유 가능 (공개)
 *       ==> 메모리 공간이 1개만 생성 
 *       
 *     ** 자바에서 사용하는 메모리
 *     -------------------------
 *      Method Area ===> 메소드, static 변수
 *     -----------------------------------
 *      Stack ==> 지역변수, 매개변수 => 메모리 자체 관리 => 메소드가 종료되면 자동으로 사라진다
 *              ---------------- 메소드 안에서만 사용이 가능
 *     -------------------------
 *      Heap ===> 배열, 클래스 멤버변수 => 프로그래머가 관리
 *     -------------------------
 *      1. int malloc(sizeod(A)) , 2. free(A)
 *         메모리 할당 메소드              메모리 해제 메소드
 *     =====> new 라는 연산자가 됨         delete 
 *     =====> 프로그래머가 삭제에 소홀 : 프로그램을 종료 자동으로 운영체제에서 삭제
 *     =====> 변수가 많아지면서 문제 발생 => 가비지 컬렉션 (자동으로 메모리 회수)
 *                                   --------- 
 *                                     => 회수할 때 프로그램 종료시쯤 회수
 *                                     => 멀티미디어 => 직접 회수해야함 => System.gc()
 *  ----------------------------------------------------------------------------------
 *   지역변수                          메소드 호출시마다  메소드안에서만 사용  메소드가 종료  Stack
 *   void display()                    메모리 생성                    return    => LIFO (Last In First Out)
 *   {                                                                          주차장 앞에서부터 들어오고 뒤부터 빠짐 
 *    데이터형 변수명;
 *    => 메소드 안에 선언 
 *    => 접근지정어 사용불가 
 *    => static 사용불가
 *    => 유일하게 final 사용가능
 *    => 다른 클래스에서 사용이 불가
 *     => 메소드 블록안에서만 사용
 *   }
 *   *멤버변수 (static,인스턴스(객체변수))
 *     => 자동초기화
 *     !지역변수는 자동초기화가 안된다 
 *     = 반드시 초기화 하고 사용해야한다
 *     

 *  ----------------------------------------------------------------------------------
 *   * 변수 
 *     저장하는 데이터가 여러 개 => 따로 메모리를 만들어서 저장 (인스턴스)
 *     저장하는 데이터가 1개 => static
 *     저장하고 필요가 없다 => 지역변수 
 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scan=new Scanner(System.in);
		System.out.print("페이지 입력:");
		int page=scan.nextInt();
		Movie[] m=MovieManager.getMovieData(page);
		// 1. 목록
		System.out.println("================== 영화 목록 ==================");
		// 메모리에 저장이 된 상태 -> 컴파일시에 메모리에 저장 => Method Area 
		// static을 이용하면 메모리 공간이 1개만 생성 => 모든 클래스에서 공유가 가능하다 
		// 변경 => 모든 클래스에서 변경된 데이터를 사용 
		for(Movie movie:m) { // movies(public) => 접근이 가능 static => 클래스명으로 접근 
			System.out.println(movie.getMno()+"."+movie.getTitle());
			//값을 출력하거나 값을 읽는 경우 :getXxx()
			//값을 저장하거나 값을 변경할 경우 : setXxx()
		}
	}

}
