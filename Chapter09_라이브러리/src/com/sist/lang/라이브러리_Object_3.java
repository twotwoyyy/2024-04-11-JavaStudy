package com.sist.lang;
/*
 *	복제 => clone() 
 *	=> Object는 모든 데이터형을 받을 수 있다 
 *  => 자바에서는 대부분이 리턴형과 매개변수 => Object 
 *  => 클래스 여러 개를 묶어서 관리 (Object)
 *  
 *  class A()
 *  class B()
 *  class C()
 *  
 *  Object[] arr={new A(), new B(), new C()}
 *  => 여러 개 => 한 개의 이름으로 제어 ...  이게 더 편하다 
 *  
 *  => 변수 / 메소드
 *           데이터를 활용  
 *     데이터 관리 
 *     ----------------
 *     메소드는 기능처리 : 연산처리, 제어문 
 *                   ------------- 묶어서 사용 
 *     class ClassName
 *     {
 *       --------------------------------
 *        화면 출력 데이터 (관리 대상) 데이터 모으기 => 저장하는 공간 : 변수 
 *        => 벤치마킹 
 *        => 한 개만 사용하는 변수 : 로그 => static 
 *        => 여러 개 따로 저장하는 변수 : 메모리를 따로 만들어서 저장 => 인스턴스 변수 
 *                                --------------------- 인스턴스 
 *                                명령어 => new 
 *       --------------------------------
 *       초기화 : 데이터를 저장 => 생성자 
 *       => 기본 데이터를 저장하는 방법 => default 생성자 
 *       => 값을 받아서 저장하는 방법 => 매개변수 있는 생성자 
 *       => 생성자는 여러 개가 필요할 때도 있다 
 *          ------------------------- 오버로딩 
 *            오버로딩 
 *             = 중복 함수 정의 => 같은 이름으로 제작 
 *             = 메소드명 동일 
 *             = 매개변수를 다르게 만든다 (개수, 데이터형)
 *             = 리턴형은 관계없다 
 *             = 접근지정어도 관계없다
 *       => 생성자
 *          클래스명과 동일
 *          리턴형이 없다 
 *          필요시에만 생성 => 없는 경우에는 자동으로 컴파일러가 추가 (매개변수가 없는 생성자)
 *          *** 시작과 동시에 처리
 *           = 화면 UI / 자동 로그인 / 서버 연결 / 데이터베이스 연결 
 *          *** 데이터베이스에서 읽어서 주로 처리  
 *          --------------------------------
 *       => 메소드 : 기능 처리 
 *                 목록 출력, 페이지 나누기, 상세보기, 예약, 결제 ... 
 *                 => 다른 클래스와 연결 
 *                 => 접근지정어는 특별한 경우를 제외하고 public 
 *                    리턴형 / 매개변수
 *                    ------------
 *                    메소드 => 프로그램마다 기능은 동일하나 처리가 다른 경우 ?
 *                    => 추상클래스 / 인터페이스를 사용한다
 *    }
 *      => 예외 처리 
 *        에러에 대한 사전 대비
 *        비정상 종료가 없는 프로그램 
 *        => 예외처리 (견고성) 
 *      => 예외 복구 => try~catch (복구)
 *         -------------------------- 대부분 사용 
 *      => 예외 회피 => 알림 => throws => 복구는 불가능 
 *      
 *      => 살을 붙이기 시작
 *         ----------- 라이브러리 (사용자가 만들지 못하는 기능 제공)
 *         자바 => 거의 모든 내용이 만들어져 있다 
 *         --------------------------------------------
 *         | 조립 => CBD (조립식 프로그램)
 *     
 *  
 */

public class 라이브러리_Object_3 {

	public static void main(String[] args) {
		System.out.printf("%d%s%c%f",10,"aaa",'a',10.7);
	}

}
